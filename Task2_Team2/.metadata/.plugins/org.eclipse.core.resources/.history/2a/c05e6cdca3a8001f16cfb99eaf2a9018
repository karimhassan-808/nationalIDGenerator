import java.io.*;
import java.util.ArrayList;
import java.util.List;

public class ID_File {
    private static final String ID_FILE = "SavedIDs.csv";

    // Save all fields in CSV format
    public static void saveID(EgyptianID id) {
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(ID_FILE, true))) {
            File file = new File(ID_FILE);

            // If the file is empty, write a header row
            if (file.length() == 0) {
                writer.write("Name,Gender,Religion,Governorate,Birthdate,IssueDate,UniqueID");
                writer.newLine();
            }

            // Write the ID data as a CSV record
            writer.write(String.join(",",
                    id.getName(),
                    id.getGender(),
                    id.getReligion(),
                    id.getGovernorate(),
                    id.getBirthdate(),
                    id.getIssueDate(),
                    id.getUniqueID()));
            writer.newLine();
        } catch (IOException e) {
            System.out.println("Error writing to " + ID_FILE);
        }
    }

    // Check if a unique ID exists in the file
    public static boolean checkForID(int ID) {
        try (BufferedReader reader = new BufferedReader(new FileReader(ID_FILE))) {
            String line;
            while ((line = reader.readLine()) != null) {
                String[] fields = line.split(",");
                if (fields.length > 6 && Integer.parseInt(fields[6].trim()) == ID) {
                    return true;
                }
            }
        } catch (IOException | NumberFormatException e) {
            System.out.println("Error reading " + ID_FILE);
        }
        return false;
    }    
    // Retrieve information for a specific ID
    public static EgyptianID getIDInfo(String uniqueID) {
        try (BufferedReader reader = new BufferedReader(new FileReader(ID_FILE))) {
            String line;
            reader.readLine(); // Skip the header row
            while ((line = reader.readLine()) != null) {
                String[] fields = line.split(",");
                if (fields.length == 7 && fields[6].trim().equals(uniqueID)) {
                    // Reconstruct and return the EgyptianID object
                    return new EgyptianID(
                            fields[0].trim(), // Name
                            fields[1].trim(), // Gender
                            fields[2].trim(), // Religion
                            fields[3].trim(), // Governorate
                            fields[4].trim()  // Birthdate
                    );
                }
            }
        } catch (IOException e) {
            System.out.println("Error reading from " + ID_FILE);
        } catch (IllegalArgumentException e) {
            System.out.println("Invalid data found in " + ID_FILE);
        }
        return null; // Return null if the ID is not found
    }
}
